---
description: 
globs: lib/**/*.ts
alwaysApply: false
---
유틸리티 함수 파일은 다음 규칙을 준수합니다:

  1. 파일 명명 규칙:
    - camelCase로 작성 (예: formatDate.ts, validateInput.ts)
    - 타입 정의 파일은 .types.ts 확장자 사용
    - 상수 파일은 .constants.ts 확장자 사용
    - 테스트 파일은 .test.ts 확장자 사용

  2. 디렉토리 구조:
    - api/: API 관련 유틸리티 (axios 인스턴스, API 헬퍼 등)
    - config/: 환경 설정 관련 파일
    - constants/: 상수 정의
    - utils/: 일반 유틸리티 함수
    - validators/: 유효성 검사 함수

  3. 함수 작성 규칙:
    - 순수 함수로 작성 (사이드 이펙트 없음)
    - 단일 책임 원칙 준수
    - 명확한 입/출력 타입 정의
    - 함수당 15줄 이내 권장
    - 적절한 JSDoc 주석 작성

  4. 타입 정의:
    - 인터페이스/타입은 명확한 이름 사용
    - 재사용 가능한 타입은 types/ 디렉토리에 정의
    - 제네릭 타입 활용
    - 유니온/인터섹션 타입 적절히 활용

  5. 상수 관리:
    - 상수는 대문자 스네이크 케이스 사용
    - 관련 상수는 객체로 그룹화
    - 환경 변수는 config 파일에서 관리
    - 매직 넘버 사용 금지

  6. API 관련:
    - axios 인스턴스 설정 통일
    - 에러 처리 미들웨어 구현
    - 요청/응답 인터셉터 활용
    - API 응답 타입 정의

  7. 유효성 검사:
    - Zod 스키마 활용
    - 재사용 가능한 검증 함수 작성
    - 에러 메시지 일관성 유지
    - 타입 가드 함수 활용

  8. 테스트:
    - 단위 테스트 필수 작성
    - 엣지 케이스 테스트
    - 타입 테스트
    - 테스트 커버리지 80% 이상 유지 